
//apply plugin: "com.stehno.natives"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.8

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    //compile 'org.bytedeco:javacv:+'
    //compile 'nu.pattern:opencv:2.4.9-7'
    //compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '2.4.11-0.11', classifier: 'macosx-x86_64'
    //compile group: 'org.bytedeco.javacpp-presets', name: 'ffmpeg', version: '2.6.1-0.11', classifier: 'macosx-x86_64'
        
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.7'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.3'

    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile group: 'org.jmockit', name: 'jmockit', version: '1.18'
    //testCompile group: '', name: '', version: ''

    compile project(":common")
    compile fileTree(dir: 'libs', include: '*.jar')
}

tasks.withType(Test) {
    loadNativeLibs(it)
}

def loadNativeLibs(def handler) {
    def nativeLibs = System.getProperty("java.library.path")
    if (nativeLibs) {
        nativeLibs = "${nativeLibs}:${projectDir}/libs";

    }
    handler.systemProperty "java.library.path", nativeLibs
}

/*run {
    systemProperties 'java.library.path', file('src/main/jniLibs')
}*/

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
